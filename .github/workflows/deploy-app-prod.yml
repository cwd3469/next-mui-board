name: Deploy WhatAilsYou Prod

on:
  push:
    branches: [ main ]

jobs:
  deploy-prod-app:
    env:
      BUILD_ENVIRONMENT: prod
      IMAGE_TAG: prod
      BUILD_S3_APP_PATH: wau-frontend-pharmacy

    name: Deploy Development App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check node version
        run: node -v

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Generate Environment Variables File for Production
        env:
          NEXT_PUBLIC_API_URL: https://api.whatailsyou.io/
          NEXT_PUBLIC_REST_API_KEY: ${{ secrets.PROD_NEXT_PUBLIC_REST_API_KEY }}
          NEXT_PUBLIC_KAKAO_API_KEY: ${{ secrets.PROD_NEXT_PUBLIC_KAKAO_API_KEY }}
          NEXT_PUBLIC_MUI_PRO_KEY: ${{ secrets.PROD_NEXT_PUBLIC_MUI_PRO_KEY }}
          NEXT_PUBLIC_FIREBASE_APP_KEY: ${{ secrets.PROD_NEXT_PUBLIC_FIREBASE_APP_KEY }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.PROD_NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_DATABASEURL: ${{ secrets.PROD_NEXT_PUBLIC_FIREBASE_DATABASEURL }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.PROD_NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGINGSENDER_ID: ${{ secrets.PROD_NEXT_PUBLIC_FIREBASE_MESSAGINGSENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.PROD_NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.PROD_NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}
        run: |
          echo "NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL" >> .env.production
          echo "NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL" >> .env.production
          echo "NEXT_PUBLIC_REST_API_KEY=$NEXT_PUBLIC_REST_API_KEY" >> .env.production
          echo "NEXT_PUBLIC_KAKAO_API_KEY=$NEXT_PUBLIC_KAKAO_API_KEY" >> .env.production
          echo "NEXT_PUBLIC_MUI_PRO_KEY=$NEXT_PUBLIC_MUI_PRO_KEY" >> .env.production
          echo "NEXT_PUBLIC_FIREBASE_APP_KEY=$NEXT_PUBLIC_FIREBASE_APP_KEY" >> .env.production
          echo "NEXT_PUBLIC_FIREBASE_PROJECT_ID=$NEXT_PUBLIC_FIREBASE_PROJECT_ID" >> .env.production
          echo "NEXT_PUBLIC_FIREBASE_DATABASEURL=$NEXT_PUBLIC_FIREBASE_DATABASEURL" >> .env.production
          echo "NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=$NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET" >> .env.production
          echo "NEXT_PUBLIC_FIREBASE_MESSAGINGSENDER_ID=$NEXT_PUBLIC_FIREBASE_MESSAGINGSENDER_ID" >> .env.production
          echo "NEXT_PUBLIC_FIREBASE_APP_ID=$NEXT_PUBLIC_FIREBASE_APP_ID" >> .env.production
          echo "NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=$NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID" >> .env.production

      # Docker build and push wau-frontend-pharmacy
      - name: Build image and push Next App
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          MODULE_NAME: wau-frontend-pharmacy
        run: |
          # Build a docker container and push it to ECR
          sed -i "s|USE_ENVIRONMENT|$BUILD_ENVIRONMENT|g" "Dockerfile"
          docker build -t $ECR_REGISTRY/$MODULE_NAME:$IMAGE_TAG .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$MODULE_NAME:$IMAGE_TAG
          echo "name=image::$ECR_REGISTRY/$MODULE_NAME:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Set environment to docker-compose.yml
        run: |
          cd ./docker-compose
          sed -i "s|USE_ENVIRONMENT|$BUILD_ENVIRONMENT|g" "docker-compose.yml"

      - name: Upload docker-compose
        run: |
          tar cvfz ./docker-compose.tar.gz ./docker-compose/*
          aws s3 cp --region ap-northeast-2 ./docker-compose.tar.gz s3://wau-production-build-s3/$BUILD_S3_APP_PATH/

      - name: Deploy with AWS codeDeploy
        run: aws deploy create-deployment
          --application-name wau-pharmacy-app
          --deployment-config-name CodeDeployDefault.OneAtATime
          --deployment-group-name wau-pharmacy-app-prod
          --s3-location bucket=wau-production-build-s3,bundleType=tgz,key=$BUILD_S3_APP_PATH/docker-compose.tar.gz

      - name: Slack hook
        uses: 8398a7/action-slack@v3.8.0
        with:
          status: ${{ job.status }}
          author_name: Build WhatAilsYou Pharmacy App - PRDO
          fields: repo,commit,message,author
          mention: here,U040ZD7MEEM
          if_mention: failure,cancelled
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_PROD2_MEMBER_HOOK }}
        if: always()